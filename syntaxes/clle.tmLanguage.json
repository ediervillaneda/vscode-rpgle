{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Rpg ILE",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash.clle",
          "begin": "\\/\\/",
          "end": "\\n"
        },
        {
          "name": "comment.block.clle",
          "begin": "\\/\\*",
          "end": "\\*\\/"
        },
        {
          "name": "comment.line.character.clle",
          "match": "(?i)^[ ][A-Z]*[:]"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.conditional.clle",
          "match": "(?i)\\b(If|Else|ElseIf|EndIf)\\b"
        },
        {
          "name": "keyword.control.switch.clle",
          "match": "(?i)\\b(Select|When|Other|EndSl)\\b"
        },
        {
          "name": "keyword.control.loop.clle",
          "match": "(?i)\\b(For|Do|Dow|Dou|EndDo|EndFor|Then)\\b"
        },
        {
          "name": "keyword.operator.clle",
          "match": "\\b(Or|And)\\b"
        },
        {
          "name": "keyword.control.clle",
          "match": "[ ](PGM|ENDPGM)([ ]|\n)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "match": "(?i)([\\%](Abs|Addr|Alloc|Bitand|Bitnot|Bitor|Bitxor|Char|Check|Checkr|Date|Days|Dec|Dech|Decpos|Diff|Div|Editc|Editflt|Editw|Elem|Eof|Equal|Error|Fields|Float|Found|Graph|Hours|Int|Inth|Kds|Len|Lookup|Minutes|Months|Mseconds|Nullind|Occur|Open|Paddr|Paddr|Parms|Realloc|Rem|Replace|Scan|Seconds|Shtdn|Size|Sqrt|Status|Str|Sst||Subdt|This|Time|Timestamp|Tlookup|Trim|Triml|Trimr|Ucs2|Uns|Unsh|Xfoot|Xlate|Years)\\()(.*?)(\\))",
          "captures": {
            "1": {
              "name": "support.class.rpgle"
            },
            "4": {
              "name": "support.class.rpgle"
            }
          }
        },
        {
          "name": "variable.parameter.clle",
          "match": "(?i)&[a-zA-Z0-9\\_]*"
        },
        {
          "match": "(?i)((PARM)\\()(.*?)(\\))",
          "captures": {
            "1": {
              "name": "entity.name.tag.clle"
            },
            "3": {
              "name": "variable.parameter.clle"
            },
            "4": {
              "name": "entity.name.tag.clle"
            }
          }
        },
        {
          "name": "constant.language.clle",
          "match": "(?i)[*](ACTGRPDFN|ALL|ALLOC|AUTO|BLANK|BLANKS|CHAR|DEC|ENTRY|EQ|HIVAL|KEEP|LIBL|LGL|LOVAL|NE|NEXT|PROC|TCAT|USRCTL|VAR|VARSIZE|ZERO|ZEROS)"
        },
        {
          "name": "string.quoted.single.clle",
          "begin": "\\'",
          "end": "\\'"
        },
        {
          "name": "string.quoted.single.clle",
          "match": "\\(\\d\\)"
        }
      ]
    }
  },
  "scopeName": "source.clle"
}